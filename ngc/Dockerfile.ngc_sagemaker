FROM nvcr.io/nvidia/tensorflow:20.02-tf2-py3

ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update && apt install -y python3-opencv libopenblas-base \
	libomp-dev build-essential

ENV PATH="/usr/local/nvm/versions/node/v13.4.0/bin:${PATH}"

RUN pip install --upgrade tensorflow_addons

RUN pip install ipywidgets imgaug \
    && jupyter labextension install @jupyter-widgets/jupyterlab-manager

RUN pip install jupyterlab-nvdashboard tqdm tensorflow_datasets \
    && jupyter labextension install jupyterlab-nvdashboard

RUN pip install matplotlib scikit-learn scikit-image seaborn \
	cython numba tqdm tensorflow_datasets \
	&& pip install pycocotools

RUN apt-get install -y --no-install-recommends openssh-client openssh-server
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

RUN mkdir -p /root/.ssh/ && \
  ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
  cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
  printf "Host *\n  StrictHostKeyChecking no\n" >> /root/.ssh/config

RUN pip install awscli
RUN pip install boto3
RUN pip install sagemaker-containers

# CMD nohup jupyter lab --allow-root --ip=0.0.0.0 --no-browser > notebook.log

# docker build -t johnbensnyder/ngc:20.02 -f Dockerfile.ngc_20.02
# docker run -it --rm -d --gpus all --net=host --name tensorflow -v ~/workspace:/workspace/shared_workspace johnbensnyder/ngc:20.02
